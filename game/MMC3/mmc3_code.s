;
; File generated by cc65 v 2.19 - Git a040c28
;
	.fopt		compiler,"cc65 v 2.19 - Git a040c28"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "mmc3\mmc3_code.c", 1060, 1667856707
	.dbg		file, "mmc3/mmc3_code.h", 4408, 1675272557
	.dbg		sym, "set_prg_8000", "00", extern, "_set_prg_8000"
	.export		_bankLevel
	.export		_bankBuffer
	.export		_banked_call
	.export		_bank_push
	.export		_bank_pop
	.import		_set_prg_8000

.segment	"RODATA"

.segment	"STARTUP"

.segment	"BSS"

_bankLevel:
	.res	1,$00
_bankBuffer:
	.res	10,$00

; ---------------------------------------------------------------
; void __near__ banked_call (unsigned char bankId, void (*method)(void))
; ---------------------------------------------------------------

.segment	"STARTUP"

.proc	_banked_call: near

	.dbg	func, "banked_call", "00", extern, "_banked_call"
	.dbg	sym, "bankId", "00", auto, 2
	.dbg	sym, "method", "00", auto, 0

.segment	"STARTUP"

;
; void banked_call(unsigned char bankId, void (*method)(void)) {
;
	.dbg	line, "mmc3\mmc3_code.c", 14
	jsr     pushax
;
; bank_push(bankId);
;
	.dbg	line, "mmc3\mmc3_code.c", 15
	ldy     #$02
	lda     (sp),y
	jsr     _bank_push
;
; (*method)();
;
	.dbg	line, "mmc3\mmc3_code.c", 17
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     callax
;
; bank_pop();
;
	.dbg	line, "mmc3\mmc3_code.c", 19
	jsr     _bank_pop
;
; }
;
	.dbg	line, "mmc3\mmc3_code.c", 20
	jmp     incsp3

	.dbg	line
.endproc

; ---------------------------------------------------------------
; void __near__ bank_push (unsigned char bankId)
; ---------------------------------------------------------------

.segment	"STARTUP"

.proc	_bank_push: near

	.dbg	func, "bank_push", "00", extern, "_bank_push"
	.dbg	sym, "bankId", "00", auto, 0

.segment	"STARTUP"

;
; void bank_push(unsigned char bankId) {
;
	.dbg	line, "mmc3\mmc3_code.c", 28
	jsr     pusha
;
; bankBuffer[bankLevel] = bankId;
;
	.dbg	line, "mmc3\mmc3_code.c", 29
	ldy     #$00
	lda     (sp),y
	ldy     _bankLevel
	sta     _bankBuffer,y
;
; ++bankLevel;
;
	.dbg	line, "mmc3\mmc3_code.c", 30
	inc     _bankLevel
;
; set_prg_8000(bankId);
;
	.dbg	line, "mmc3\mmc3_code.c", 32
	ldy     #$00
	lda     (sp),y
	jsr     _set_prg_8000
;
; }
;
	.dbg	line, "mmc3\mmc3_code.c", 33
	jmp     incsp1

	.dbg	line
.endproc

; ---------------------------------------------------------------
; void __near__ bank_pop (void)
; ---------------------------------------------------------------

.segment	"STARTUP"

.proc	_bank_pop: near

	.dbg	func, "bank_pop", "00", extern, "_bank_pop"

.segment	"STARTUP"

;
; --bankLevel;
;
	.dbg	line, "mmc3\mmc3_code.c", 40
	dec     _bankLevel
;
; if (bankLevel > 0) {
;
	.dbg	line, "mmc3\mmc3_code.c", 41
	beq     L0002
;
; set_prg_8000(bankBuffer[bankLevel-1]);
;
	.dbg	line, "mmc3\mmc3_code.c", 42
	ldx     #$00
	lda     _bankLevel
	sec
	sbc     #$01
	bcs     L0003
	dex
L0003:	sta     ptr1
	txa
	clc
	adc     #>(_bankBuffer)
	sta     ptr1+1
	ldy     #<(_bankBuffer)
	lda     (ptr1),y
	jmp     _set_prg_8000
;
; }
;
	.dbg	line, "mmc3\mmc3_code.c", 44
L0002:	rts

	.dbg	line
.endproc

